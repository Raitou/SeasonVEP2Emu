using Common;
using libcomservice.Core;
using libcomservice.Data;
using libcomservice.Game.Player.Channel;
using libcomservice.Request;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace libcomservice.Game.RelayServer
{
    public class RelayServer
    {
        public void StartGame(Session p, PacketRead r)
        {
            int mypos = p.PInfo.CurRoom.GetPositionPlayer(p);

            if (p.PInfo.CurRoom.m_dwSlots[mypos].Leader == false)
                return;

            int NeedReady = p.PInfo.CurRoom.m_usUsers() - 1;
            int NowReady = 0;
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
                if (p.PInfo.CurRoom.m_dwSlots[i].Status == 1 && p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                    NowReady++;

            if (NeedReady < NowReady)
                return;

            PacketWrite pw = new PacketWrite();

            pw.Long(1495061228);
            pw.Int(0);
            pw.Int(0);
            pw.Int(3);//00 00 00 03
            pw.Int(15459220);//00 EB E3 94
            pw.Int(p.PInfo.m_dwUserUID);//342673
            pw.Int(30);
            pw.Int(1);
            pw.Byte((byte)2);
            pw.Int(58770);//00 00 E5 92
            pw.Int(1);
            pw.Int(-1);
            pw.Int(-1);
            pw.Int(1022739087);
            pw.Int(-1);
            pw.HexArray("08 50 50 0A");
            pw.Int(p.PInfo.m_dwUserUID);//342673
            pw.HexArray("00 00 00 2B 00 00 00 03 02 00 00 30 CA 00 00 00 01 FF FF FF FF FF FF FF FF 3F 80 00 00 FF FF FF FF 0C D6 D5 1F");
            pw.Int(p.PInfo.m_dwUserUID);//342673
            pw.HexArray("00 00 00 2B 00 00 00 03 02 00 0A 89 BC FF FF FF FF FF FF FF FF FF FF FF FF 3E 2A AA AD FF FF FF FF 00 00 00 00 00 00 00 18 11 8B 6B 19 00 00 00 00 00 00 00 1D 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 17 70 71 BE 00 00 00 00 00 00 00 1D 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 27 B3 9B 2A 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 02 00 00 00 34 00 00 00 00 FF FF FF FF 3F 80 00 00 FF FF FF FF 2A 4F A2 5D 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 02 00 00 00 34 00 00 00 00 FF FF FF FF 3F 80 00 00 FF FF FF FF 30 6D 76 21 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 30 EA 30 4C 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 3D AC 5E 7F 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 41 83 B9 74 00 00 00 00 00 00 00 1E 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 4A 17 74 05 00 00 00 00 00 00 00 1F 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 65 37 DC 1F 00 00 00 00 00 00 00 1F 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 68 87 02 CE 00 00 00 00 00 00 00 20 00 00 00 01 00 00 00 00 02 00 00 00 34 00 00 00 00 FF FF FF FF 3F 80 00 00 FF FF FF FF 6C C8 FE 80 00 00 00 00 00 00 00 20 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 80 A2 43 59 00 00 00 00 00 00 00 20 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF 90 F3 25 1A 00 00 00 00 00 00 00 20 00 00 00 01 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF A6 86 CB DC 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF B5 9A 6F 97 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF C3 29 B0 78 00 00 00 00 00 00 00 24 00 00 00 04 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF C7 9C 43 3C 00 00 00 00 00 00 00 24 00 00 00 04 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF CA B9 B8 D0 00 00 00 00 00 00 00 24 00 00 00 04 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF CB 9D AF BE 00 00 00 00 00 00 00 24 00 00 00 04 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF CB CA 6C D3 00 00 00 00 00 00 00 24 00 00 00 04 00 00 00 00 01 00 00 00 34 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF CC 8E FD 9B 00 00 00 00 00 00 00 2B 00 00 00 03 00 00 00 00 01 00 00 00 9C 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF D9 05 85 43 00 00 00 00 00 00 00 2B 00 00 00 03 00 00 00 00 01 00 00 00 9C 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF F1 D0 8D 70 00 00 00 00 00 00 00 2B 00 00 00 03 00 00 00 00 01 00 00 00 9C 00 00 00 00 FF FF FF FF 3E 4C CC CD FF FF FF FF");
            pw.Int(p.PInfo.CurRoom.m_usUsers());

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);

            pw.HexArray("00 02 46 FE");
            pw.Int(p.PInfo.CurRoom.m_usUsers());
            for (int i = 0; i < 6; i++)
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);
                    pw.HexArray("00 00 01 04 00 00 00 6A");
                }
            pw.Int(0);

            pw.Int(p.PInfo.CurRoom.m_sSearchLeader().PInfo.m_dwUserUID);
            pw.HexArray("00 00 00 00 00 00 00");

            pw.Byte(p.PInfo.CurRoom.m_cGameCategory);
            pw.Int(p.PInfo.CurRoom.m_iGameMode);
            pw.Int(p.PInfo.CurRoom.m_iSubGameMode);
            pw.Bool(p.PInfo.CurRoom.m_bRandomableMap);
            pw.Int(p.PInfo.CurRoom.m_iMapID);
            pw.HexArray("00 00 00 00 FF FF FF FF 00 00 00 01 00 00 00");
            pw.Short(p.PInfo.CurRoom.m_usUsers());
            pw.Short((short)p.PInfo.CurRoom.m_abTotalSlotsOpen());

            for (int i = 0; i < 6; i++)
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                    pw.Bool(p.PInfo.CurRoom.m_dwSlots[i].Open);

            pw.HexArray("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");
            pw.Int(p.PInfo.CurRoom.m_usUsers());

            for (int i = 0; i < 6; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.HexArray("00 00 03 E8");
                }
            }
            pw.HexArray("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    p.PInfo.CurRoom.m_dwSlots[i].usr.SendPacket(pw, 70);
                }
            }
            p.PInfo.CurRoom.m_bPlaying = true;
        }

        public void LoadComplete(Session p, PacketRead r)
        {
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active && p.PInfo.CurRoom.m_dwSlots[i].LoadPlayer < 17 && p.PInfo.CurRoom.m_usUsers() >= 2)
                {
                    return;
                }
            }

            PacketWrite pw = new PacketWrite();
            pw.Int(0);
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 852);
        }

        public void LoadStage(Session p, PacketRead r)
        {
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active && p.PInfo.CurRoom.m_dwSlots[i].LoadPlayer < 17 && p.PInfo.CurRoom.m_usUsers() >= 2)
                {
                    return;
                }
            }

            PacketWrite pw = new PacketWrite();
            pw.Int(0);            
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 928);
        }

        public void LoadState(Session p, PacketRead r)
        {
            int loginuid = r.Int();
            int percent = r.Int();

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true && p.PInfo.CurRoom.m_dwSlots[i].usr == p)
                    p.PInfo.CurRoom.m_dwSlots[i].LoadPlayer = percent;

            PacketWrite pw = new PacketWrite();
            pw.Int(loginuid);
            pw.Int(percent);
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 853);
        }

        public void LeaveGame(Session p, PacketRead r)
        {
            try
            {
                ChannelInfo.ProcessExit(p);
                PacketWrite pw = new PacketWrite();
                pw.Int(0);
                p.SendPacket(pw, 77);
            }
            catch(Exception ex)
            {
                Log.Write("{0}\n{1}", ex.Message, ex.StackTrace);
            }
        }

        public void EndGame(Session p, PacketRead r)
        {
            PacketWrite pw = new PacketWrite();
            pw.Int(15651);
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 411);
            ResultPremium(p);
            if (p.PInfo.CurRoom.m_cGameCategory == 2)
            {
                ResultGame(p);
            }
            else
            {
                ResultGamePVP(p);
            }
            GameUsersClear(p.PInfo.CurRoom);
        }

        private void GameUsersClear(libcomservice.REQUEST.Room room)
        {
            for (int i = 0; i < room.m_usMaxUsers; i++)
            {
                if (room.m_dwSlots[i].Active == true)
                {
                    room.m_dwSlots[i].Kills = 0;
                    room.m_dwSlots[i].Deaths = 0;
                    room.m_dwSlots[i].Win = 0;
                }
            }
            room.m_bPlaying = false;
        }

        private void ResultPremium(Session p)
        {
            PacketWrite pw = new PacketWrite();
            pw.Int(p.PInfo.CurRoom.m_usUsers());
            for (int x = 0; x < p.PInfo.CurRoom.m_usMaxUsers; x++ )
            {
                if (p.PInfo.CurRoom.m_dwSlots[x].Active)
                {
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[x].usr.PInfo.m_dwUserUID);
                    pw.Int(0);
                }
            }
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    p.PInfo.CurRoom.m_dwSlots[i].usr.SendPacket(pw, 411);
                }
            }
        }

        private void ResultGamePVP(Session p)
        {
             PacketWrite pw = new PacketWrite();
            pw.Int(p.PInfo.CurRoom.m_sSearchLeader().PInfo.m_dwUserUID);
            pw.Int(p.PInfo.CurRoom.m_usUsers());
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    pw.UnicodeStr(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_strLogin);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_iGamePoint);
                    pw.HexArray("00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 02 3A B7 80 34 00 00 00 03 3D CC CC CD 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");
                    int poschar = p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.PositionCharacter(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType, p.PInfo.CurRoom.m_dwSlots[i].usr);
                    Serializables.SerializeStages(p.PInfo.CurRoom.m_dwSlots[i].usr, pw);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Int(0);
                    pw.Int(1);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Long(p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.CharInfo[poschar].Exp);
                    pw.Long(p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.CharInfo[poschar].Exp);
                    pw.HexArray("00 00 00 00 00 00 00 04 00 00 00 A0 00 00 00 04 00 00 00 A0 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 96 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 8C 00 00 78 6E 00 00 00 01 00 00 00 01 00 00 00 14 00 00 00 00 00 00 00 01 00 00 00 14 00 00 00 00 00 00 78 78 00 00 00 01 00 00 00 01 00 00 00 15 00 00 00 00 00 00 00 01 00 00 00 15 00 00 00 00 00 00 78 82 00 00 00 01 00 00 00 01 00 00 00 16 00 00 00 00 00 00 00 01 00 00 00 16 00 00 00 00 00 00 78 8C 00 00 00 01 00 00 00 01 00 00 00 17 00 00 00 00 00 00 00 01 00 00 00 17 00 00 00 00 00 00 78 96 00 00 00 01 00 00 00 01 00 00 00 18 00 00 00 00 00 00 00 01 00 00 00 18 00 00 00 00 00 00 78 A0 00 00 00 01 00 00 00 01 00 00 00 19 00 00 00 00 00 00 00 01 00 00 00 19 00 00 00 00 00 00 78 AA 00 00 00 01 00 00 00 01 00 00 00 1A 00 00 00 00 00 00 00 01 00 00 00 1A 00 00 00 00 00 00 78 B4 00 00 00 01 00 00 00 01 00 00 00 1B 00 00 00 00 00 00 00 01 00 00 00 1B 00 00 00 00 00 00 78 BE 00 00 00 01 00 00 00 01 00 00 00 1C 00 00 00 00 00 00 00 01 00 00 00 1C 00 00 00 00 00 00 78 C8 00 00 00 01 00 00 00 01 00 00 00 1D 00 00 00 00 00 00 00 01 00 00 00 1D 00 00 00 00 00 00 78 D2 00 00 00 01 00 00 00 01 00 00 00 1E 00 00 00 00 00 00 00 01 00 00 00 1E 00 00 00 00 00 00 78 DC 00 00 00 01 00 00 00 01 00 00 00 1F 00 00 00 00 00 00 00 01 00 00 00 1F 00 00 00 00 00 00 78 E6 00 00 00 01 00 00 00 01 00 00 00 20 00 00 00 00 00 00 00 01 00 00 00 20 00 00 00 00 00 00 78 F0 00 00 00 01 00 00 00 01 00 00 00 21 00 00 00 00 00 00 00 01 00 00 00 21 00 00 00 00 00 00 78 FA 00 00 00 01 00 00 00 01 00 00 00 22 00 00 00 00 00 00 00 01 00 00 00 22 00 00 00 00 00 00 79 04 00 00 00 01 00 00 00 01 00 00 00 23 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 00 00 00 79 0E 00 00 00 01 00 00 00 01 00 00 00 24 00 00 00 00 00 00 00 01 00 00 00 24 00 00 00 00 00 00 79 18 00 00 00 01 00 00 00 01 00 00 00 25 00 00 00 00 00 00 00 01 00 00 00 25 00 00 00 00 00 00 79 22 00 00 00 01 00 00 00 01 00 00 00 26 00 00 00 00 00 00 00 01 00 00 00 26 00 00 00 00 00 00 79 2C 00 00 00 01 00 00 00 01 00 00 00 28 00 00 00 00 00 00 00 01 00 00 00 28 00 00 00 00 00 00 79 36 00 00 00 01 00 00 00 01 00 00 00 2A 00 00 00 00 00 00 00 01 00 00 00 2A 00 00 00 00 00 00 79 40 00 00 00 01 00 00 00 01 00 00 00 2C 00 00 00 00 00 00 00 01 00 00 00 2C 00 00 00 00 00 00 79 4A 00 00 00 01 00 00 00 01 00 00 00 2E 00 00 00 00 00 00 00 01 00 00 00 2E 00 00 00 00 00 00 85 C0 00 00 00 01 00 00 00 01 00 00 00 30 00 00 00 00 00 00 00 01 00 00 00 30 00 00 00 00 00 00 85 CA 00 00 00 01 00 00 00 01 00 00 00 32 00 00 00 00 00 00 00 01 00 00 00 32 00 00 00 00 00 00 85 D4 00 00 00 01 00 00 00 01 00 00 00 42 00 00 00 00 00 00 00 01 00 00 00 42 00 00 00 00 00 00 85 DE 00 00 00 01 00 00 00 01 00 00 00 44 00 00 00 00 00 00 00 01 00 00 00 44 00 00 00 00 00 00 85 E8 00 00 00 01 00 00 00 01 00 00 00 46 00 00 00 00 00 00 00 01 00 00 00 46 00 00 00 00 00 00 85 F2 00 00 00 01 00 00 00 01 00 00 00 48 00 00 00 00 00 00 00 01 00 00 00 48 00 00 00 00 00 00 85 FC 00 00 00 01 00 00 00 01 00 00 00 4A 00 00 00 00 00 00 00 01 00 00 00 4A 00 00 00 00 00 00 86 06 00 00 00 01 00 00 00 01 00 00 00 4C 00 00 00 00 00 00 00 01 00 00 00 4C 00 00 00 00 00 00 86 10 00 00 00 01 00 00 00 01 00 00 00 50 00 00 00 00 00 00 00 01 00 00 00 50 00 00 00 00 00 00 86 1A 00 00 00 01 00 00 00 01 00 00 00 52 00 00 00 00 00 00 00 01 00 00 00 52 00 00 00 00 00 00 86 24 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 2E 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 38 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 42 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 4C 00 00 00 01 00 00 00 00 00 00 00 00 00 01 45 8C 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 01 45 96 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 00 00 01 45 A0 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 00 00 00 00 01 00 00 00 02 00 00 00 00 00 01 45 AA 00 00 00 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00 01 00 00 00 03 00 00 00 00 00 01 45 B4 00 00 00 01 00 00 00 01 00 00 00 04 00 00 00 00 00 00 00 01 00 00 00 04 00 00 00 00 00 01 45 BE 00 00 00 01 00 00 00 01 00 00 00 05 00 00 00 00 00 00 00 01 00 00 00 05 00 00 00 00 00 01 45 C8 00 00 00 01 00 00 00 01 00 00 00 06 00 00 00 00 00 00 00 01 00 00 00 06 00 00 00 00 00 01 45 D2 00 00 00 01 00 00 00 01 00 00 00 07 00 00 00 00 00 00 00 01 00 00 00 07 00 00 00 00 00 01 45 DC 00 00 00 01 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 01 00 00 00 08 00 00 00 00 00 01 45 E6 00 00 00 01 00 00 00 01 00 00 00 09 00 00 00 00 00 00 00 01 00 00 00 09 00 00 00 00 00 01 45 F0 00 00 00 01 00 00 00 01 00 00 00 0A 00 00 00 00 00 00 00 01 00 00 00 0A 00 00 00 00 00 01 45 FA 00 00 00 01 00 00 00 01 00 00 00 0B 00 00 00 00 00 00 00 01 00 00 00 0B 00 00 00 00 00 01 46 04 00 00 00 01 00 00 00 01 00 00 00 0C 00 00 00 00 00 00 00 01 00 00 00 0C 00 00 00 00 00 01 46 0E 00 00 00 01 00 00 00 01 00 00 00 0D 00 00 00 00 00 00 00 01 00 00 00 0D 00 00 00 00 00 01 46 18 00 00 00 01 00 00 00 01 00 00 00 0E 00 00 00 00 00 00 00 01 00 00 00 0E 00 00 00 00 00 01 46 22 00 00 00 01 00 00 00 01 00 00 00 0F 00 00 00 00 00 00 00 01 00 00 00 0F 00 00 00 00 00 01 46 2C 00 00 00 01 00 00 00 01 00 00 00 10 00 00 00 00 00 00 00 01 00 00 00 10 00 00 00 00 00 01 46 36 00 00 00 01 00 00 00 01 00 00 00 11 00 00 00 00 00 00 00 01 00 00 00 11 00 00 00 00 00 01 46 40 00 00 00 01 00 00 00 01 00 00 00 12 00 00 00 00 00 00 00 01 00 00 00 12 00 00 00 00 00 01 46 4A 00 00 00 01 00 00 00 01 00 00 00 13 00 00 00 00 00 00 00 01 00 00 00 13 00 00 00 00 00 01 9B 18 00 00 00 01 00 00 00 01 00 00 00 27 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 00 00 01 FF 40 00 00 00 01 00 00 00 01 00 00 00 29 00 00 00 00 00 00 00 01 00 00 00 29 00 00 00 00 00 01 FF 4A 00 00 00 01 00 00 00 01 00 00 00 2B 00 00 00 00 00 00 00 01 00 00 00 2B 00 00 00 00 00 02 1E 9E 00 00 00 01 00 00 00 01 00 00 00 2D 00 00 00 00 00 00 00 01 00 00 00 2D 00 00 00 00 00 02 29 A2 00 00 00 01 00 00 00 01 00 00 00 2F 00 00 00 00 00 00 00 01 00 00 00 2F 00 00 00 00 00 02 41 08 00 00 00 01 00 00 00 01 00 00 00 31 00 00 00 00 00 00 00 01 00 00 00 31 00 00 00 00 00 02 CA 56 00 00 00 01 00 00 00 01 00 00 00 33 00 00 00 00 00 00 00 01 00 00 00 33 00 00 00 00 00 02 CA 60 00 00 00 01 00 00 00 01 00 00 00 34 00 00 00 00 00 00 00 01 00 00 00 34 00 00 00 00 00 02 CA 6A 00 00 00 01 00 00 00 01 00 00 00 35 00 00 00 00 00 00 00 01 00 00 00 35 00 00 00 00 00 02 CA 74 00 00 00 01 00 00 00 01 00 00 00 36 00 00 00 00 00 00 00 01 00 00 00 36 00 00 00 00 00 02 D1 2C 00 00 00 01 00 00 00 01 00 00 00 37 00 00 00 00 00 00 00 01 00 00 00 37 00 00 00 00 00 02 D1 36 00 00 00 01 00 00 00 01 00 00 00 38 00 00 00 00 00 00 00 01 00 00 00 38 00 00 00 00 00 02 D1 40 00 00 00 01 00 00 00 01 00 00 00 39 00 00 00 00 00 00 00 01 00 00 00 39 00 00 00 00 00 02 D1 4A 00 00 00 01 00 00 00 01 00 00 00 3A 00 00 00 00 00 00 00 01 00 00 00 3A 00 00 00 00 00 02 E0 54 00 00 00 01 00 00 00 01 00 00 00 3B 00 00 00 00 00 00 00 01 00 00 00 3B 00 00 00 00 00 02 E0 5E 00 00 00 01 00 00 00 01 00 00 00 3C 00 00 00 00 00 00 00 01 00 00 00 3C 00 00 00 00 00 02 E0 68 00 00 00 01 00 00 00 01 00 00 00 3D 00 00 00 00 00 00 00 01 00 00 00 3D 00 00 00 00 00 02 E0 72 00 00 00 01 00 00 00 01 00 00 00 3E 00 00 00 00 00 00 00 01 00 00 00 3E 00 00 00 00 00 02 E0 7C 00 00 00 01 00 00 00 01 00 00 00 3F 00 00 00 00 00 00 00 01 00 00 00 3F 00 00 00 00 00 02 E0 86 00 00 00 01 00 00 00 01 00 00 00 40 00 00 00 00 00 00 00 01 00 00 00 40 00 00 00 00 00 03 4A 76 00 00 00 01 00 00 00 01 00 00 00 41 00 00 00 00 00 00 00 01 00 00 00 41 00 00 00 00 00 03 4A 80 00 00 00 01 00 00 00 01 00 00 00 43 00 00 00 00 00 00 00 01 00 00 00 43 00 00 00 00 00 03 4A 8A 00 00 00 01 00 00 00 01 00 00 00 45 00 00 00 00 00 00 00 01 00 00 00 45 00 00 00 00 00 03 4A 94 00 00 00 01 00 00 00 01 00 00 00 47 00 00 00 00 00 00 00 01 00 00 00 47 00 00 00 00 00 04 89 86 00 00 00 01 00 00 00 01 00 00 00 49 00 00 00 00 00 00 00 01 00 00 00 49 00 00 00 00 00 04 89 90 00 00 00 01 00 00 00 01 00 00 00 4B 00 00 00 00 00 00 00 01 00 00 00 4B 00 00 00 00 00 05 0F 6E 00 00 00 01 00 00 00 01 00 00 00 4D 00 00 00 00 00 00 00 01 00 00 00 4D 00 00 00 00 00 05 0F 78 00 00 00 01 00 00 00 01 00 00 00 4E 00 00 00 00 00 00 00 01 00 00 00 4E 00 00 00 00 00 05 9A 42 00 00 00 01 00 00 00 01 00 00 00 4F 00 00 00 00 00 00 00 01 00 00 00 4F 00 00 00 00 00 06 E2 3A 00 00 00 01 00 00 00 01 00 00 00 51 00 00 00 00 00 00 00 01 00 00 00 51 00 00 00 00 00 08 33 1A 00 00 00 01 00 00 00 01 00 00 00 53 00 00 00 00 00 00 00 01 00 00 00 53 00 00 00 00 00 08 33 24 00 00 00 01 00 00 00 01 00 00 00 54 00 00 00 00 00 00 00 01 00 00 00 54 00 00 00 00 00 09 54 66 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 70 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 7A 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 84 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 8E 00 00 00 01 00 00 00 00 00 00 00 00 00 0A 1E 28 00 00 00 01 00 00 00 01 00 00 00 5F 00 00 00 00 00 00 00 01 00 00 00 5F 00 00 00 00 00 0A 1E 32 00 00 00 01 00 00 00 01 00 00 00 60 00 00 00 00 00 00 00 01 00 00 00 60 00 00 00 00 00 0C 55 08 00 00 00 01 00 00 00 01 00 00 00 61 00 00 00 00 00 00 00 01 00 00 00 61 00 00 00 00 00 0C 55 12 00 00 00 01 00 00 00 01 00 00 00 62 00 00 00 00 00 00 00 01 00 00 00 62 00 00 00 00 00 0D 72 94 00 00 00 01 00 00 00 01 00 00 00 63 00 00 00 00 00 00 00 01 00 00 00 63 00 00 00 00 00 0D 72 9E 00 00 00 01 00 00 00 01 00 00 00 64 00 00 00 00 00 00 00 01 00 00 00 64 00 00 00 00 00 0E E9 E4 00 00 00 01 00 00 00 01 00 00 00 65 00 00 00 00 00 00 00 01 00 00 00 65 00 00 00 00 00 0E E9 EE 00 00 00 01 00 00 00 01 00 00 00 66 00 00 00 00 00 00 00 01 00 00 00 66 00 00 00 00 00 0E E9 F8 00 00 00 01 00 00 00 01 00 00 00 67 00 00 00 00 00 00 00 01 00 00 00 67 00 00 00 00 00 0E EA 02 00 00 00 01 00 00 00 01 00 00 00 68 00 00 00 00 00 00 00 01 00 00 00 68 00 00 00 00 00 0E EA 0C 00 00 00 01 00 00 00 01 00 00 00 6B 00 00 00 00 00 00 00 01 00 00 00 6B 00 00 00 00 00 0E EA 16 00 00 00 01 00 00 00 01 00 00 00 6B 00 00 00 00 00 00 00 01 00 00 00 6B 00 00 00 00 00 0F 85 98 00 00 00 01 00 00 00 01 00 00 00 69 00 00 00 00 00 00 00 01 00 00 00 69 00 00 00 00 00 0F 85 A2 00 00 00 01 00 00 00 01 00 00 00 6A 00 00 00 00 00 00 00 01 00 00 00 6A 00 00 00 00 00 10 49 60 00 00 00 01 00 00 00 01 00 00 00 6C 00 00 00 00 00 00 00 01 00 00 00 6C 00 00 00 00 00 10 49 6A 00 00 00 01 00 00 00 01 00 00 00 6D 00 00 00 00 00 00 00 01 00 00 00 6D 00 00 00 00 00 10 6A 3A 00 00 00 01 00 00 00 01 00 00 00 6E 00 00 00 00 00 00 00 01 00 00 00 6E 00 00 00 00 00 10 6A 44 00 00 00 01 00 00 00 01 00 00 00 6F 00 00 00 00 00 00 00 01 00 00 00 6F 00 00 00 00 00 10 A5 18 00 00 00 01 00 00 00 01 00 00 00 70 00 00 00 00 00 00 00 01 00 00 00 70 00 00 00 00 00 10 A5 22 00 00 00 01 00 00 00 01 00 00 00 71 00 00 00 00 00 00 00 01 00 00 00 71 00 00 00 00 00 10 E6 E0 00 00 00 01 00 00 00 01 00 00 00 72 00 00 00 00 00 00 00 01 00 00 00 72 00 00 00 00 00 10 E6 EA 00 00 00 01 00 00 00 01 00 00 00 73 00 00 00 00 00 00 00 01 00 00 00 73 00 00 00 00 00 12 6A A6 00 00 00 01 00 00 00 01 00 00 00 74 00 00 00 00 00 00 00 01 00 00 00 74 00 00 00 00 00 12 6A B0 00 00 00 01 00 00 00 01 00 00 00 75 00 00 00 00 00 00 00 01 00 00 00 75 00 00 00 00 00 12 6A BA 00 00 00 01 00 00 00 01 00 00 00 76 00 00 00 00 00 00 00 01 00 00 00 76 00 00 00 00 00 12 6A C4 00 00 00 01 00 00 00 01 00 00 00 77 00 00 00 00 00 00 00 01 00 00 00 77 00 00 00 00 00 12 6A CE 00 00 00 01 00 00 00 01 00 00 00 78 00 00 00 00 00 00 00 01 00 00 00 78 00 00 00 00 00 12 6A D8 00 00 00 01 00 00 00 01 00 00 00 79 00 00 00 00 00 00 00 01 00 00 00 79 00 00 00 00 00 12 9F 26 00 00 00 01 00 00 00 01 00 00 00 7A 00 00 00 00 00 00 00 01 00 00 00 7A 00 00 00 00 00 12 9F 30 00 00 00 01 00 00 00 01 00 00 00 7B 00 00 00 00 00 00 00 01 00 00 00 7B 00 00 00 00 00 12 9F 3A 00 00 00 01 00 00 00 01 00 00 00 7C 00 00 00 00 00 00 00 01 00 00 00 7C 00 00 00 00 00 12 9F 44 00 00 00 01 00 00 00 01 00 00 00 7D 00 00 00 00 00 00 00 01 00 00 00 7D 00 00 00 00 00 12 9F 4E 00 00 00 01 00 00 00 01 00 00 00 7E 00 00 00 00 00 00 00 01 00 00 00 7E 00 00 00 00 00 13 8C 24 00 00 00 01 00 00 00 01 00 00 00 7F 00 00 00 00 00 00 00 01 00 00 00 7F 00 00 00 00 00 13 8C 2E 00 00 00 01 00 00 00 00 00 00 00 00 00 13 8C 38 00 00 00 01 00 00 00 01 00 00 00 80 00 00 00 00 00 00 00 01 00 00 00 80 00 00 00 00 00 13 8C 42 00 00 00 01 00 00 00 01 00 00 00 85 00 00 00 00 00 00 00 01 00 00 00 85 00 00 00 00 00 13 8C 4C 00 00 00 01 00 00 00 01 00 00 00 81 00 00 00 00 00 00 00 01 00 00 00 81 00 00 00 00 00 13 8C 56 00 00 00 01 00 00 00 01 00 00 00 86 00 00 00 00 00 00 00 01 00 00 00 86 00 00 00 00 00 13 8C 60 00 00 00 01 00 00 00 01 00 00 00 82 00 00 00 00 00 00 00 01 00 00 00 82 00 00 00 00 00 13 8C 6A 00 00 00 01 00 00 00 01 00 00 00 87 00 00 00 00 00 00 00 01 00 00 00 87 00 00 00 00 00 13 8C 74 00 00 00 01 00 00 00 01 00 00 00 83 00 00 00 00 00 00 00 01 00 00 00 83 00 00 00 00 00 13 8C 7E 00 00 00 01 00 00 00 01 00 00 00 88 00 00 00 00 00 00 00 01 00 00 00 88 00 00 00 00 00 13 8C 88 00 00 00 01 00 00 00 01 00 00 00 84 00 00 00 00 00 00 00 01 00 00 00 84 00 00 00 00 00 13 8C 92 00 00 00 01 00 00 00 01 00 00 00 89 00 00 00 00 00 00 00 01 00 00 00 89 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 47 00 00 00 00 00 00 00 00 00 FF FF FF 01 00 00 00 00 00 00 00 00 00 00 14 00 00 00 00 47 98 0C CB 00 00 00 00");
                }
            }
            pw.HexArray("00 00 00 00 00 00 00 00 00 00 77 00 00 00 00 00 00 00 00 00");
                        
            pw.Int(6);

            FinishGame(p.PInfo.CurRoom, pw);
            pw.HexArray("00 00 00 00 00 01 00 00 00 00 01 00 00 00 00");

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    p.PInfo.CurRoom.m_dwSlots[i].usr.SendPacket(pw, 895);
                }
            }
            GameUsersClear(p.PInfo.CurRoom);
        }

        private void ResultGame(Session p)
        {
            VerifyGameResult(p);
            PacketWrite pw = new PacketWrite();
            pw.Int(p.PInfo.CurRoom.m_sSearchLeader().PInfo.m_dwUserUID);
            pw.Int(p.PInfo.CurRoom.m_usUsers());
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    pw.UnicodeStr(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_strLogin);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_iGamePoint);
                    pw.HexArray("00 00 00 F9 00 00 00 31 00 00 00 03 00 00 00 02 00 00 00 00 00 00 00 03 3D CC CC CD 00 00 00 04 3D CC CC CD 00 00 00 00 00 00 00 00 00 00 00 01 0B 00 00 00 01 00 00 00 01 0B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");
                    pw.Int(0);//Itens reward//00 00 00 01 00 08 A2 0A 00 00 00 00 00 D9 9D 29 00 00 00 06 00 00 00 06 00 00 00 00 00 00 FF FF FF FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF 01 58 73 0D 0B CE 52 38 00 00 0B 00 00 00 00 00 00 00 00 00");
                    pw.Int(0);                    
                    int poschar = p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.PositionCharacter(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType,p);
                    Serializables.SerializeStages(p, pw);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Int(0);
                    pw.Int(1);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Long(p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.CharInfo[poschar].Exp);
                    pw.Long(p.PInfo.CurRoom.m_dwSlots[i].usr.PCharacters.CharInfo[poschar].Exp);
                    pw.HexArray("00 00 00 00 00 00 00 8C 00 00 00 A0 00 00 00 8C 00 00 00 A0 00 00 00 00 00 00 00 04 00 00 00 00 3E 19 99 9A 00 00 00 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 04 3D CC CC CD 00 00 00 04 00 00 00 00 3E 19 99 9A 00 00 00 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 04 3D CC CC CD 00 00 00 08 00 00 00 00 00 00 00 02 00 00 00 01 00 00 00 00 00 00 05 78 00 00 00 00 01 00 00 00 00 00 00 00 01 00 14 BA 2C 00 00 00 01 3B 9C 50 A1 00 00 00 01 5A 35 8E 45 5A 34 3C C5 00 00 00 00 00 00 00 01 00 08 A2 0A 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 8C 00 00 78 6E 00 00 00 01 00 00 00 01 00 00 00 14 00 00 00 00 00 00 00 01 00 00 00 14 00 00 00 00 00 00 78 78 00 00 00 01 00 00 00 01 00 00 00 15 00 00 00 00 00 00 00 01 00 00 00 15 00 00 00 00 00 00 78 82 00 00 00 01 00 00 00 01 00 00 00 16 00 00 00 00 00 00 00 01 00 00 00 16 00 00 00 00 00 00 78 8C 00 00 00 01 00 00 00 01 00 00 00 17 00 00 00 00 00 00 00 01 00 00 00 17 00 00 00 00 00 00 78 96 00 00 00 01 00 00 00 01 00 00 00 18 00 00 00 00 00 00 00 01 00 00 00 18 00 00 00 00 00 00 78 A0 00 00 00 01 00 00 00 01 00 00 00 19 00 00 00 00 00 00 00 01 00 00 00 19 00 00 00 00 00 00 78 AA 00 00 00 01 00 00 00 01 00 00 00 1A 00 00 00 00 00 00 00 01 00 00 00 1A 00 00 00 00 00 00 78 B4 00 00 00 01 00 00 00 01 00 00 00 1B 00 00 00 00 00 00 00 01 00 00 00 1B 00 00 00 00 00 00 78 BE 00 00 00 01 00 00 00 01 00 00 00 1C 00 00 00 00 00 00 00 01 00 00 00 1C 00 00 00 00 00 00 78 C8 00 00 00 01 00 00 00 01 00 00 00 1D 00 00 00 00 00 00 00 01 00 00 00 1D 00 00 00 00 00 00 78 D2 00 00 00 01 00 00 00 01 00 00 00 1E 00 00 00 00 00 00 00 01 00 00 00 1E 00 00 00 00 00 00 78 DC 00 00 00 01 00 00 00 01 00 00 00 1F 00 00 00 00 00 00 00 01 00 00 00 1F 00 00 00 00 00 00 78 E6 00 00 00 01 00 00 00 01 00 00 00 20 00 00 00 00 00 00 00 01 00 00 00 20 00 00 00 00 00 00 78 F0 00 00 00 01 00 00 00 01 00 00 00 21 00 00 00 00 00 00 00 01 00 00 00 21 00 00 00 00 00 00 78 FA 00 00 00 01 00 00 00 01 00 00 00 22 00 00 00 00 00 00 00 01 00 00 00 22 00 00 00 00 00 00 79 04 00 00 00 01 00 00 00 01 00 00 00 23 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 00 00 00 79 0E 00 00 00 01 00 00 00 01 00 00 00 24 00 00 00 00 00 00 00 01 00 00 00 24 00 00 00 00 00 00 79 18 00 00 00 01 00 00 00 01 00 00 00 25 00 00 00 00 00 00 00 01 00 00 00 25 00 00 00 00 00 00 79 22 00 00 00 01 00 00 00 01 00 00 00 26 00 00 00 00 00 00 00 01 00 00 00 26 00 00 00 00 00 00 79 2C 00 00 00 01 00 00 00 01 00 00 00 28 00 00 00 00 00 00 00 01 00 00 00 28 00 00 00 00 00 00 79 36 00 00 00 01 00 00 00 01 00 00 00 2A 00 00 00 00 00 00 00 01 00 00 00 2A 00 00 00 00 00 00 79 40 00 00 00 01 00 00 00 01 00 00 00 2C 00 00 00 00 00 00 00 01 00 00 00 2C 00 00 00 00 00 00 79 4A 00 00 00 01 00 00 00 01 00 00 00 2E 00 00 00 00 00 00 00 01 00 00 00 2E 00 00 00 00 00 00 85 C0 00 00 00 01 00 00 00 01 00 00 00 30 00 00 00 00 00 00 00 01 00 00 00 30 00 00 00 00 00 00 85 CA 00 00 00 01 00 00 00 01 00 00 00 32 00 00 00 00 00 00 00 01 00 00 00 32 00 00 00 00 00 00 85 D4 00 00 00 01 00 00 00 01 00 00 00 42 00 00 00 00 00 00 00 01 00 00 00 42 00 00 00 00 00 00 85 DE 00 00 00 01 00 00 00 01 00 00 00 44 00 00 00 00 00 00 00 01 00 00 00 44 00 00 00 00 00 00 85 E8 00 00 00 01 00 00 00 01 00 00 00 46 00 00 00 00 00 00 00 01 00 00 00 46 00 00 00 00 00 00 85 F2 00 00 00 01 00 00 00 01 00 00 00 48 00 00 00 00 00 00 00 01 00 00 00 48 00 00 00 00 00 00 85 FC 00 00 00 01 00 00 00 01 00 00 00 4A 00 00 00 00 00 00 00 01 00 00 00 4A 00 00 00 00 00 00 86 06 00 00 00 01 00 00 00 01 00 00 00 4C 00 00 00 00 00 00 00 01 00 00 00 4C 00 00 00 00 00 00 86 10 00 00 00 01 00 00 00 01 00 00 00 50 00 00 00 00 00 00 00 01 00 00 00 50 00 00 00 00 00 00 86 1A 00 00 00 01 00 00 00 01 00 00 00 52 00 00 00 00 00 00 00 01 00 00 00 52 00 00 00 00 00 00 86 24 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 2E 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 38 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 42 00 00 00 01 00 00 00 00 00 00 00 00 00 00 86 4C 00 00 00 01 00 00 00 00 00 00 00 00 00 01 45 8C 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 01 45 96 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 00 00 01 45 A0 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 00 00 00 00 01 00 00 00 02 00 00 00 00 00 01 45 AA 00 00 00 01 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00 01 00 00 00 03 00 00 00 00 00 01 45 B4 00 00 00 01 00 00 00 01 00 00 00 04 00 00 00 00 00 00 00 01 00 00 00 04 00 00 00 00 00 01 45 BE 00 00 00 01 00 00 00 01 00 00 00 05 00 00 00 00 00 00 00 01 00 00 00 05 00 00 00 00 00 01 45 C8 00 00 00 01 00 00 00 01 00 00 00 06 00 00 00 00 00 00 00 01 00 00 00 06 00 00 00 00 00 01 45 D2 00 00 00 01 00 00 00 01 00 00 00 07 00 00 00 00 00 00 00 01 00 00 00 07 00 00 00 00 00 01 45 DC 00 00 00 01 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 01 00 00 00 08 00 00 00 00 00 01 45 E6 00 00 00 01 00 00 00 01 00 00 00 09 00 00 00 00 00 00 00 01 00 00 00 09 00 00 00 00 00 01 45 F0 00 00 00 01 00 00 00 01 00 00 00 0A 00 00 00 00 00 00 00 01 00 00 00 0A 00 00 00 00 00 01 45 FA 00 00 00 01 00 00 00 01 00 00 00 0B 00 00 00 00 00 00 00 01 00 00 00 0B 00 00 00 00 00 01 46 04 00 00 00 01 00 00 00 01 00 00 00 0C 00 00 00 00 00 00 00 01 00 00 00 0C 00 00 00 00 00 01 46 0E 00 00 00 01 00 00 00 01 00 00 00 0D 00 00 00 00 00 00 00 01 00 00 00 0D 00 00 00 00 00 01 46 18 00 00 00 01 00 00 00 01 00 00 00 0E 00 00 00 00 00 00 00 01 00 00 00 0E 00 00 00 00 00 01 46 22 00 00 00 01 00 00 00 01 00 00 00 0F 00 00 00 00 00 00 00 01 00 00 00 0F 00 00 00 00 00 01 46 2C 00 00 00 01 00 00 00 01 00 00 00 10 00 00 00 00 00 00 00 01 00 00 00 10 00 00 00 00 00 01 46 36 00 00 00 01 00 00 00 01 00 00 00 11 00 00 00 00 00 00 00 01 00 00 00 11 00 00 00 00 00 01 46 40 00 00 00 01 00 00 00 01 00 00 00 12 00 00 00 00 00 00 00 01 00 00 00 12 00 00 00 00 00 01 46 4A 00 00 00 01 00 00 00 01 00 00 00 13 00 00 00 00 00 00 00 01 00 00 00 13 00 00 00 00 00 01 9B 18 00 00 00 01 00 00 00 01 00 00 00 27 00 00 00 00 00 00 00 01 00 00 00 27 00 00 00 00 00 01 FF 40 00 00 00 01 00 00 00 01 00 00 00 29 00 00 00 00 00 00 00 01 00 00 00 29 00 00 00 00 00 01 FF 4A 00 00 00 01 00 00 00 01 00 00 00 2B 00 00 00 00 00 00 00 01 00 00 00 2B 00 00 00 00 00 02 1E 9E 00 00 00 01 00 00 00 01 00 00 00 2D 00 00 00 00 00 00 00 01 00 00 00 2D 00 00 00 00 00 02 29 A2 00 00 00 01 00 00 00 01 00 00 00 2F 00 00 00 00 00 00 00 01 00 00 00 2F 00 00 00 00 00 02 41 08 00 00 00 01 00 00 00 01 00 00 00 31 00 00 00 00 00 00 00 01 00 00 00 31 00 00 00 00 00 02 CA 56 00 00 00 01 00 00 00 01 00 00 00 33 00 00 00 00 00 00 00 01 00 00 00 33 00 00 00 00 00 02 CA 60 00 00 00 01 00 00 00 01 00 00 00 34 00 00 00 00 00 00 00 01 00 00 00 34 00 00 00 00 00 02 CA 6A 00 00 00 01 00 00 00 01 00 00 00 35 00 00 00 00 00 00 00 01 00 00 00 35 00 00 00 00 00 02 CA 74 00 00 00 01 00 00 00 01 00 00 00 36 00 00 00 00 00 00 00 01 00 00 00 36 00 00 00 00 00 02 D1 2C 00 00 00 01 00 00 00 01 00 00 00 37 00 00 00 00 00 00 00 01 00 00 00 37 00 00 00 00 00 02 D1 36 00 00 00 01 00 00 00 01 00 00 00 38 00 00 00 00 00 00 00 01 00 00 00 38 00 00 00 00 00 02 D1 40 00 00 00 01 00 00 00 01 00 00 00 39 00 00 00 00 00 00 00 01 00 00 00 39 00 00 00 00 00 02 D1 4A 00 00 00 01 00 00 00 01 00 00 00 3A 00 00 00 00 00 00 00 01 00 00 00 3A 00 00 00 00 00 02 E0 54 00 00 00 01 00 00 00 01 00 00 00 3B 00 00 00 00 00 00 00 01 00 00 00 3B 00 00 00 00 00 02 E0 5E 00 00 00 01 00 00 00 01 00 00 00 3C 00 00 00 00 00 00 00 01 00 00 00 3C 00 00 00 00 00 02 E0 68 00 00 00 01 00 00 00 01 00 00 00 3D 00 00 00 00 00 00 00 01 00 00 00 3D 00 00 00 00 00 02 E0 72 00 00 00 01 00 00 00 01 00 00 00 3E 00 00 00 00 00 00 00 01 00 00 00 3E 00 00 00 00 00 02 E0 7C 00 00 00 01 00 00 00 01 00 00 00 3F 00 00 00 00 00 00 00 01 00 00 00 3F 00 00 00 00 00 02 E0 86 00 00 00 01 00 00 00 01 00 00 00 40 00 00 00 00 00 00 00 01 00 00 00 40 00 00 00 00 00 03 4A 76 00 00 00 01 00 00 00 01 00 00 00 41 00 00 00 00 00 00 00 01 00 00 00 41 00 00 00 00 00 03 4A 80 00 00 00 01 00 00 00 01 00 00 00 43 00 00 00 00 00 00 00 01 00 00 00 43 00 00 00 00 00 03 4A 8A 00 00 00 01 00 00 00 01 00 00 00 45 00 00 00 00 00 00 00 01 00 00 00 45 00 00 00 00 00 03 4A 94 00 00 00 01 00 00 00 01 00 00 00 47 00 00 00 00 00 00 00 01 00 00 00 47 00 00 00 00 00 04 89 86 00 00 00 01 00 00 00 01 00 00 00 49 00 00 00 00 00 00 00 01 00 00 00 49 00 00 00 00 00 04 89 90 00 00 00 01 00 00 00 01 00 00 00 4B 00 00 00 00 00 00 00 01 00 00 00 4B 00 00 00 00 00 05 0F 6E 00 00 00 01 00 00 00 01 00 00 00 4D 00 00 00 00 00 00 00 01 00 00 00 4D 00 00 00 00 00 05 0F 78 00 00 00 01 00 00 00 01 00 00 00 4E 00 00 00 00 00 00 00 01 00 00 00 4E 00 00 00 00 00 05 9A 42 00 00 00 01 00 00 00 01 00 00 00 4F 00 00 00 00 00 00 00 01 00 00 00 4F 00 00 00 00 00 06 E2 3A 00 00 00 01 00 00 00 01 00 00 00 51 00 00 00 00 00 00 00 01 00 00 00 51 00 00 00 00 00 08 33 1A 00 00 00 01 00 00 00 01 00 00 00 53 00 00 00 00 00 00 00 01 00 00 00 53 00 00 00 00 00 08 33 24 00 00 00 01 00 00 00 01 00 00 00 54 00 00 00 00 00 00 00 01 00 00 00 54 00 00 00 00 00 09 54 66 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 70 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 7A 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 84 00 00 00 01 00 00 00 00 00 00 00 00 00 09 54 8E 00 00 00 01 00 00 00 00 00 00 00 00 00 0A 1E 28 00 00 00 01 00 00 00 01 00 00 00 5F 00 00 00 00 00 00 00 01 00 00 00 5F 00 00 00 00 00 0A 1E 32 00 00 00 01 00 00 00 01 00 00 00 60 00 00 00 00 00 00 00 01 00 00 00 60 00 00 00 00 00 0C 55 08 00 00 00 01 00 00 00 01 00 00 00 61 00 00 00 00 00 00 00 01 00 00 00 61 00 00 00 00 00 0C 55 12 00 00 00 01 00 00 00 01 00 00 00 62 00 00 00 00 00 00 00 01 00 00 00 62 00 00 00 00 00 0D 72 94 00 00 00 01 00 00 00 01 00 00 00 63 00 00 00 00 00 00 00 01 00 00 00 63 00 00 00 00 00 0D 72 9E 00 00 00 01 00 00 00 01 00 00 00 64 00 00 00 00 00 00 00 01 00 00 00 64 00 00 00 00 00 0E E9 E4 00 00 00 01 00 00 00 01 00 00 00 65 00 00 00 00 00 00 00 01 00 00 00 65 00 00 00 00 00 0E E9 EE 00 00 00 01 00 00 00 01 00 00 00 66 00 00 00 00 00 00 00 01 00 00 00 66 00 00 00 00 00 0E E9 F8 00 00 00 01 00 00 00 01 00 00 00 67 00 00 00 00 00 00 00 01 00 00 00 67 00 00 00 00 00 0E EA 02 00 00 00 01 00 00 00 01 00 00 00 68 00 00 00 00 00 00 00 01 00 00 00 68 00 00 00 00 00 0E EA 0C 00 00 00 01 00 00 00 01 00 00 00 6B 00 00 00 00 00 00 00 01 00 00 00 6B 00 00 00 00 00 0E EA 16 00 00 00 01 00 00 00 01 00 00 00 6B 00 00 00 00 00 00 00 01 00 00 00 6B 00 00 00 00 00 0F 85 98 00 00 00 01 00 00 00 01 00 00 00 69 00 00 00 00 00 00 00 01 00 00 00 69 00 00 00 00 00 0F 85 A2 00 00 00 01 00 00 00 01 00 00 00 6A 00 00 00 00 00 00 00 01 00 00 00 6A 00 00 00 00 00 10 49 60 00 00 00 01 00 00 00 01 00 00 00 6C 00 00 00 00 00 00 00 01 00 00 00 6C 00 00 00 00 00 10 49 6A 00 00 00 01 00 00 00 01 00 00 00 6D 00 00 00 00 00 00 00 01 00 00 00 6D 00 00 00 00 00 10 6A 3A 00 00 00 01 00 00 00 01 00 00 00 6E 00 00 00 00 00 00 00 01 00 00 00 6E 00 00 00 00 00 10 6A 44 00 00 00 01 00 00 00 01 00 00 00 6F 00 00 00 00 00 00 00 01 00 00 00 6F 00 00 00 00 00 10 A5 18 00 00 00 01 00 00 00 01 00 00 00 70 00 00 00 00 00 00 00 01 00 00 00 70 00 00 00 00 00 10 A5 22 00 00 00 01 00 00 00 01 00 00 00 71 00 00 00 00 00 00 00 01 00 00 00 71 00 00 00 00 00 10 E6 E0 00 00 00 01 00 00 00 01 00 00 00 72 00 00 00 00 00 00 00 01 00 00 00 72 00 00 00 00 00 10 E6 EA 00 00 00 01 00 00 00 01 00 00 00 73 00 00 00 00 00 00 00 01 00 00 00 73 00 00 00 00 00 12 6A A6 00 00 00 01 00 00 00 01 00 00 00 74 00 00 00 00 00 00 00 01 00 00 00 74 00 00 00 00 00 12 6A B0 00 00 00 01 00 00 00 01 00 00 00 75 00 00 00 00 00 00 00 01 00 00 00 75 00 00 00 00 00 12 6A BA 00 00 00 01 00 00 00 01 00 00 00 76 00 00 00 00 00 00 00 01 00 00 00 76 00 00 00 00 00 12 6A C4 00 00 00 01 00 00 00 01 00 00 00 77 00 00 00 00 00 00 00 01 00 00 00 77 00 00 00 00 00 12 6A CE 00 00 00 01 00 00 00 01 00 00 00 78 00 00 00 00 00 00 00 01 00 00 00 78 00 00 00 00 00 12 6A D8 00 00 00 01 00 00 00 01 00 00 00 79 00 00 00 00 00 00 00 01 00 00 00 79 00 00 00 00 00 12 9F 26 00 00 00 01 00 00 00 01 00 00 00 7A 00 00 00 00 00 00 00 01 00 00 00 7A 00 00 00 00 00 12 9F 30 00 00 00 01 00 00 00 01 00 00 00 7B 00 00 00 00 00 00 00 01 00 00 00 7B 00 00 00 00 00 12 9F 3A 00 00 00 01 00 00 00 01 00 00 00 7C 00 00 00 00 00 00 00 01 00 00 00 7C 00 00 00 00 00 12 9F 44 00 00 00 01 00 00 00 01 00 00 00 7D 00 00 00 00 00 00 00 01 00 00 00 7D 00 00 00 00 00 12 9F 4E 00 00 00 01 00 00 00 01 00 00 00 7E 00 00 00 00 00 00 00 01 00 00 00 7E 00 00 00 00 00 13 8C 24 00 00 00 01 00 00 00 01 00 00 00 7F 00 00 00 00 00 00 00 01 00 00 00 7F 00 00 00 00 00 13 8C 2E 00 00 00 01 00 00 00 00 00 00 00 00 00 13 8C 38 00 00 00 01 00 00 00 01 00 00 00 80 00 00 00 00 00 00 00 01 00 00 00 80 00 00 00 00 00 13 8C 42 00 00 00 01 00 00 00 01 00 00 00 85 00 00 00 00 00 00 00 01 00 00 00 85 00 00 00 00 00 13 8C 4C 00 00 00 01 00 00 00 01 00 00 00 81 00 00 00 00 00 00 00 01 00 00 00 81 00 00 00 00 00 13 8C 56 00 00 00 01 00 00 00 01 00 00 00 86 00 00 00 00 00 00 00 01 00 00 00 86 00 00 00 00 00 13 8C 60 00 00 00 01 00 00 00 01 00 00 00 82 00 00 00 00 00 00 00 01 00 00 00 82 00 00 00 00 00 13 8C 6A 00 00 00 01 00 00 00 01 00 00 00 87 00 00 00 00 00 00 00 01 00 00 00 87 00 00 00 00 00 13 8C 74 00 00 00 01 00 00 00 01 00 00 00 83 00 00 00 00 00 00 00 01 00 00 00 83 00 00 00 00 00 13 8C 7E 00 00 00 01 00 00 00 01 00 00 00 88 00 00 00 00 00 00 00 01 00 00 00 88 00 00 00 00 00 13 8C 88 00 00 00 01 00 00 00 01 00 00 00 84 00 00 00 00 00 00 00 01 00 00 00 84 00 00 00 00 00 13 8C 92 00 00 00 01 00 00 00 01 00 00 00 89 00 00 00 00 00 00 00 01 00 00 00 89 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 47 01 00 00 00 00 00 00 00 00 FF FF FF 01 00");
                    pw.Byte((byte)1);//Keys
                    pw.HexArray("00 00 00 00 00 00 00 00 14 00 00 00 00 47 98 0C 39 00 00 00 00");
                }
            }
            pw.HexArray("00 00 00 00 00 00 00 00 00 00 77 00 00 00 00 00 00 00 00 00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00");

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    p.PInfo.CurRoom.m_dwSlots[i].usr.SendPacket(pw, 895);
                }
            }
            GameUsersClear(p.PInfo.CurRoom);
        }

        private void FinishGame(libcomservice.REQUEST.Room room, PacketWrite pw)
        {
            for (int i = 0; i < room.m_usMaxUsers; i++)
            {
                if (room.m_dwSlots[i].Active == true)
                {
                    if (room.m_dwSlots[i].Deaths == 3)
                    {
                        room.m_dwSlots[i].Win = 0;
                    }
                    else if (room.m_dwSlots[i].Deaths == 5)
                    {
                        room.m_dwSlots[i].Win = 0;
                    }
                    else
                    {
                        room.m_dwSlots[i].Win = 1;
                    }
                }
            }

            for (int i = 0; i < room.m_usMaxUsers; i++)
            {
                if (room.m_dwSlots[i].Active == true)
                {
                    pw.Byte(room.m_dwSlots[i].Win);//01 00 00 00 00 00
                }
                else
                {
                    pw.Byte(0);
                }
            }
            if (room.m_usMaxUsers == 4)
            {
                pw.Byte(0);
                pw.Byte(0);
            }
        }

        public void SpecialReward(Session p, PacketRead r)
        {
            uint[] itensSlots = new uint[4];
            int currentitem = 0;
            Random rnd = new Random();

            PacketWrite pw = new PacketWrite();          

            int dwUsers = r.Int();
            pw.Int(dwUsers);
            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                if (p.PInfo.CurRoom.m_dwSlots[i].Active == true)
                {
                    int m_dwUserUID = r.Int();//ID
                    byte m_bChar = r.Byte();
                    int m_dwSlot = r.Int();
                    byte unk = r.Byte();
                    byte unk2 = r.Byte();
                    uint itemuid = GetUID();
                    int quantity = -1;

                    for (int j = 0; j < itensSlots.Length; j+=1)
                    {
                        currentitem = rnd.Next(RewardItems.Items.Length);
                        itensSlots[j] = RewardItems.Items[currentitem];
                    }

                    r.Jump(16);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_dwUserUID);
                    pw.Byte(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_ucCharType);
                    pw.Int(m_dwSlot);
                    pw.Byte(unk);
                    pw.Byte(unk2);
                    pw.Int(0);
                    pw.Int(p.PInfo.CurRoom.m_dwSlots[i].usr.PInfo.m_iGamePoint);
                    if (RewardItems.Items[currentitem] != 0)
                    {
                        pw.Int(1);
                        Serializables.KItemInfo(pw, itensSlots[m_dwSlot], itemuid, 0);
                    }
                    else
                    {
                        pw.Int(0);
                    }
                    pw.Int(4);
                    for (short x = 0; x < 4; x++)
                    {
                        pw.Short((short)(4 - x));
                        pw.UInt(itensSlots[x]);
                        pw.Int(-1);
                        pw.Int(-1);
                        pw.HexArray("00 FF 00 00 FF 00 00 00 00");
                        if (x == m_dwSlot && RewardItems.Items[currentitem] != 0)
                        {
                            p.PInventory.AddItem(p.PInfo.m_strLogin, RewardItems.Items[currentitem], quantity, itemuid, (byte)p.PInfo.CurRoom.m_iMapID);
                        }
                    }
                }
            }
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw,915);
        }

        private uint GetUID()
        {
            System.Data.DataSet q0 = new System.Data.DataSet();
            GameServer.Sql.Exec(q0, "SELECT * FROM GoodsObjectList");
            return (uint)q0.Tables[0].Rows.Count;
        }

        private void VerifyGameResult(Session p)
        {
            if (p.PInfo.CurRoom.m_cGameCategory == 2)
            {
                int StageID = 0;
                StageID = p.PInfo.CurRoom.m_iGameMode;

                if (StageID != 7)
                {
                    Querys.VerifyGameClear(p, StageID, 1, 1, 1);

                    if (StageID == 18)
                    {
                        StageID = 39;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 39)
                    {
                        StageID = 40;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 41)
                    {
                        StageID = 43;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 46)
                    {
                        StageID = 19;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 27)
                    {
                        StageID = 30;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 30)
                    {
                        StageID = 36;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 36)
                    {
                        StageID = 42;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 42)
                    {
                        StageID = 47;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 50)
                    {
                        StageID = 55;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 57)
                    {
                        StageID = 59;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 59)
                    {
                        StageID = 78;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 80)
                    {
                        StageID = 58;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 58)
                    {
                        StageID = 60;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 61)
                    {
                        StageID = 64;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 64)
                    {
                        StageID = 73;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                    else if (StageID == 74)
                    {
                        StageID = 81;
                        Querys.VerifyGameClear(p, StageID, 1, 1, 1);
                    }
                }
            }
        }

        public void KChangeRoomUserInfo(Session p, PacketRead r)
        {
            int m_nOK = r.Int();
            r.Jump(4);

            byte m_ucChangeType = r.Byte();
            string m_strLogin = r.UnicodeString();
            int m_iTeam = r.Int();
            int m_nUserSlot = r.Int();
            byte m_cCharIndex = r.Byte();
            byte[] m_vecUnk = r.Buffer_Array_Bytes(9);
            byte m_bIsInfoState = r.Byte();

            if (m_strLogin != p.PInfo.m_strLogin)
                return;

            if (m_ucChangeType == 0 && p.PInfo.CurRoom.m_cGameCategory != 3)
                p.PInfo.m_ucCharType = m_cCharIndex;

            int MyPositionSlot = p.PInfo.CurRoom.m_dwUserSlot(p);
            if (p.PInfo.CurRoom.GetTeam(p) != m_iTeam && m_ucChangeType == 1 && m_bIsInfoState == 0)
            {
                //New position
                p.PInfo.CurRoom.ChangeSlot(p.PInfo.CurRoom.PVPChangeSlot(p.PInfo.CurRoom, m_iTeam),
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Active,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].usr,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Leader,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Open,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].AFK,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Deaths,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Kills,
                    p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Win
                     );

                //Old position
                p.PInfo.CurRoom.ChangeSlot(MyPositionSlot, false, null, false, true, 0, false);
                MyPositionSlot = p.PInfo.CurRoom.m_dwUserSlot(p);
                p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Team = m_iTeam;
            }

            if (m_ucChangeType == 4 || m_ucChangeType == 3)
                p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status = m_bIsInfoState;

            PacketWrite pw = new PacketWrite();
            pw.Int(0);
            pw.Int(p.PInfo.m_dwUserUID);
            pw.Byte(m_ucChangeType);
            pw.UnicodeStr(p.PInfo.m_strLogin);
            pw.Int(p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Team);
            pw.Int(MyPositionSlot);
            pw.Byte(p.PInfo.m_ucCharType);
            pw.ArrayBytes(m_vecUnk);
            pw.Byte(p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status);
            pw.Int(0);            

            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 73);
        }

        public void KChangeRoomInfo(Session p, PacketRead RB)
        {
            if (p.PInfo.m_dwAuthType != 3)
            {
                if (p.PInfo.CurRoom.m_sSearchLeader() != p)
                    return;
            }

            int changemodescount = RB.Int();

            RB.Jump(3);

            byte matchmode = RB.Byte();

            int gamemode = RB.Int();

            int itemmode = RB.Int();

            bool randommap = RB.Bool();

            int map = RB.Int();

            int difficulty = RB.Int();

            RB.Jump(24);

            byte changeslotcount = RB.Byte();

            if (changeslotcount > 0)
            {
                for (int i = 0; i < changeslotcount; i++)
                {
                    byte Slot = RB.Byte();
                    bool Open = RB.Bool();
                    p.PInfo.CurRoom.m_dwSlots[Slot].Open = Open;
                }
            }

            if (changemodescount == 0)
            {
                p.PInfo.CurRoom.ChangeModes(matchmode, randommap, gamemode, itemmode, map, difficulty);
            }

            PacketWrite pw = new PacketWrite();
            pw.Int(0);
            pw.Byte(0);
            pw.Short(0);

            pw.Byte((byte)p.PInfo.CurRoom.m_cGameCategory);
            pw.Int(p.PInfo.CurRoom.m_iGameMode);
            pw.Int(p.PInfo.CurRoom.m_iSubGameMode);
            pw.Bool(p.PInfo.CurRoom.m_bRandomableMap);
            pw.Int(p.PInfo.CurRoom.m_iMapID);

            pw.Int(difficulty);
            pw.HexArray("FF FF FF FF 00 00 00 00 00 00 00");

            pw.Short((short)p.PInfo.CurRoom.m_usUsers());
            pw.Short((short)p.PInfo.CurRoom.m_abTotalSlotsOpen());

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                pw.Bool(p.PInfo.CurRoom.m_dwSlots[i].Open);
            }
            if (p.PInfo.CurRoom.m_usMaxUsers == 4)
            {
                pw.Bool(false);
                pw.Bool(false);
            }

            pw.Int(changeslotcount);
            pw.HexArray("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");

            if (changeslotcount == 1)
            {
                pw.Short(0);
                pw.Short(1);
                pw.Short(0);
            }

            else if (changeslotcount == 2)
            {
                pw.Short(1);
                pw.Short(0);
                pw.Short(0);

            }
            else
            {
                pw.Short(0);
                pw.Short(0);
                pw.Short(1);
            }
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 61);
        }

        /*
        public void KChangeRoomUserInfo(Session p, PacketRead r)
        {
            try
            {
                Log.WriteHex("test:", r.Get_Payload());
                int m_nOK = r.Int();
                r.Jump(4);

                byte m_ucChangeType = r.Byte();
                string m_strLogin = r.UnicodeString();
                int m_iTeam = r.Int();
                int m_nUserSlot = r.Int();
                byte m_cCharIndex = r.Byte();
                byte[] m_vecUnk = r.Buffer_Array_Bytes(9);
                byte m_bIsInfoState = r.Byte();

                Log.Write("State:{0}", m_bIsInfoState);
                                
                if (m_strLogin != p.PInfo.m_strLogin)
                    return;
                int MyPositionSlot = p.PInfo.CurRoom.m_dwUserSlot(p);

                if (m_ucChangeType == 4)
                {

                    if (m_bIsInfoState == 0)
                        p.PInfo.m_ucCharType = m_cCharIndex;
                    else if (m_bIsInfoState == 1)
                        p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status = m_bIsInfoState;
                    else if (m_bIsInfoState == 2)
                    {
                        //New position
                        p.PInfo.CurRoom.ChangeSlot(p.PInfo.CurRoom.PVPChangeSlot(p.PInfo.CurRoom, m_iTeam),
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Active,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].usr,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Leader,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Open,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].AFK,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Deaths,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Kills,
                            p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Win
                             );

                        //Old position
                        p.PInfo.CurRoom.ChangeSlot(MyPositionSlot, false, null, false, true, 0, false);
                        MyPositionSlot = p.PInfo.CurRoom.m_dwUserSlot(p);
                        p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Team = m_iTeam;
                    }
                }
                PacketWrite pw = new PacketWrite();
                pw.Int(m_nOK);
                pw.Int(p.PInfo.m_dwUserUID);
                pw.Byte(m_ucChangeType);
                pw.UnicodeStr(p.PInfo.m_strLogin);
                pw.Int(p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Team);
                pw.Int(MyPositionSlot);
                pw.Byte(p.PInfo.m_ucCharType);
                pw.ArrayBytes(m_vecUnk);
                pw.Byte(p.PInfo.CurRoom.m_dwSlots[MyPositionSlot].Status);
                pw.Byte(0);
                p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 73);
            }
            catch (Exception ex)
            {
                Log.Write("{0}\n{1}",ex.Message,ex.StackTrace);
            }
        }

        public void KChangeRoomInfo(Session p, PacketRead r)
        {            
            if (p.PInfo.m_dwAuthType != 3)
            {
                if (p.PInfo.CurRoom.m_sSearchLeader() != p)
                    return;
            }

            int m_nOK = r.Int();
            byte[] m_vecUnk = r.Buffer_Array_Bytes(3);
            byte m_cGameCategory = r.Byte();
            int m_iGameMode = r.Int();
            int m_iSubGameMode = r.Int();
            bool m_bRandomableMap = r.Bool();
            int m_iMapID = r.Int();
            int m_cDifficulty = r.Int();
            int m_vecMonsterSlot = r.Int();            
            ushort m_usMaxUsers = r.UShort();
            bool[] m_abSlotOpen = new bool[m_usMaxUsers];
            for (int x = 0; x < m_abSlotOpen.Length; x++)
            {
                m_abSlotOpen[x] = r.Bool();
            }
            byte m_dwChangeSlot = r.Byte();
            for (int x = 0; x < m_dwChangeSlot; x++)
            {
                byte Slot = r.Byte();
                bool Open = r.Bool();
                p.PInfo.CurRoom.m_dwSlots[Slot].Open = Open;
            }            

            if (m_nOK == 0)
            {
                p.PInfo.CurRoom.ChangeModes(m_cGameCategory, m_bRandomableMap, m_iGameMode, m_iSubGameMode, m_iMapID, m_cDifficulty);
            }

            PacketWrite pw = new PacketWrite();
            pw.Int(m_nOK);
            pw.ArrayBytes(m_vecUnk);
            pw.Byte(p.PInfo.CurRoom.m_cGameCategory);
            pw.Int(p.PInfo.CurRoom.m_iGameMode);
            pw.Int(p.PInfo.CurRoom.m_iSubGameMode);
            pw.Bool(p.PInfo.CurRoom.m_bRandomableMap);
            pw.Int(p.PInfo.CurRoom.m_iMapID);
            pw.Int(p.PInfo.CurRoom.m_cDifficulty);
            pw.Int(p.PInfo.CurRoom.m_vecMonsterSlot);

            pw.Short((short)(p.PInfo.CurRoom.m_usUsers() + p.PInfo.CurRoom.m_abTotalSlotsOpen()));

            for (int i = 0; i < p.PInfo.CurRoom.m_usMaxUsers; i++)
            {
                pw.Bool(p.PInfo.CurRoom.m_dwSlots[i].Open);
            }
            if (p.PInfo.CurRoom.m_usMaxUsers == 4)
            {
                pw.Bool(false);
                pw.Bool(false);
            }

            pw.Int(m_dwChangeSlot);
            pw.HexArray("00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00");

            if (m_dwChangeSlot == 1)
            {
                pw.Short(0);
                pw.Short(1);
                pw.Short(0);
            }

            else if (m_dwChangeSlot == 2)
            {
                pw.Short(1);
                pw.Short(0);
                pw.Short(0);

            }
            else
            {
                pw.Short(0);
                pw.Short(0);
                pw.Short(1);
            }         
            
            p.PInfo.CurRoom.SendForAllPlayersInRoom(pw, 61);
        }
        */

    }
}
